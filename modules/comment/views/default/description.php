<h2>Просто тестовое задание</h2><br>
<h3>RBAC</h3><br>
<ul>
    <li>rbac</li>
    <li>AJAX</li>
    <li>Авторизация и Регистрация(Роль администратора: admin/password)</li>
</ul>


<h3>Роли:</h3>
<ul>
    <li>Админ (добавлять/изменять/удалять все сообщения)</li>
    <li>Пользователь (добавлять/изменять/удалять свои сообщения)</li>
</ul>
<br>
<h3>Немного описания</h3>
<ul>
    <li>Сортировка - снизу-вверх (последние добавленное сообщение - сверху). У каждого сообщения, помимо текста, указано имя (username) автора и время добавления.</li>
    <li>Если пользователь авторизован, ему становится доступна форма отправки сообщения.</li>
    <li>Сообщение не может быть пустым (или состоять только из пробелов).</li>
    <li>При попытке отправки такого сообщения - пользователю выдается предупреждение “Сообщение не может быть пустым”.</li>
    <li>После успешной отправки, сообщение пользователя сразу появляется на “стене”.</li>
    <li>Добавление, правка и удаление своих сообщений, реализовано на ajax.</li>
</ul>
<br>
<h3>Справочник</h3><br>
<ul>
    <li>Более 38000 строк</li>
    <li>Разработать дерево классификатора</li>
    <li>Отображение древовидной структуры вложенности позиций справочника</li>
    <li>возможно сворачивать\разворачивать каждый узел дерева</li>
    <li>возможность поиска по тексту, коду, путем ввода, текста в input над деревом, причем, поиск должен осуществляться по мере ввода текста пользователем с небольшой задержкой. Результатом поиска должно быть так же дерево только по найденным совпадениям с выводом всей иерархии до найденного узла.</li>
</ul>
<br>
<h3>Проверка правильности расстановки фигурных скобок { }</h3>
<ul>
    <li>Например, такая последовательность: «{ … { … } … { … { … } … } … }», является корректной, а такая: «{ … { … } { … { … } … }», нет.</li>
</ul><br>